df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
df %>% summarise_at(1:3,funs(mean((obs-.)^2)),cols=["a","b","c"])
df %>% summarise_at(1:3,funs(mean((obs-.)^2)),cols=c("a","b","c"))
df %>% summarise_at(1:3,funs(mean((obs-.)^2)),vars=c("a","b","c"))
df %>% summarise_at(c("a","b","c"),1:3,funs(mean((obs-.)^2)))
df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
df %>% summarise_at(vars(1:3),funs(mean((obs-.)^2)))
df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
df %>% summarise_at(1:3,funs(mean((obs-.)^2))) %>% colnames(c("a","b","e"))
df %>% summarise_at(1:3,funs(mean((obs-.)^2))) %>% colnames()=c("a","b","e")
df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
df1=df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
colnames(df1)=c("a","b","e")
df1
df_error=df %>% summarise_at(1:3,funs(mean((obs-.)^2)))
colnames(df_error)=c("pred.lm","pred.lasso","pred.ridge")
df_error
df
library(tidyverse)
library(leaps)
library(glmnet)
library(mlbench)
library(rpart)
library(rpart.plot)
install.packages("rpart.plot")
install.packages("visNetwork")
library(tidyverse)
library(leaps)
library(glmnet)
library(mlbench)
library(rpart)
library(rpart.plot)
library(visNetwork)
library(ISLR)
install.packages("ISLR")
library(tidyverse)
library(leaps)
library(glmnet)
library(mlbench)
library(rpart)
library(rpart.plot)
library(visNetwork)
library(ISLR)
library(kernlab)
library(randomForest)
install.packages("randomForest")
library(tidyverse)
library(leaps)
library(glmnet)
library(mlbench)
library(rpart)
library(rpart.plot)
library(visNetwork)
library(ISLR)
library(kernlab)
library(randomForest)
library(plotROC)
library(pROC)
library(ranger)
install.packages("ranger")
library(tidyverse)
library(leaps)
library(glmnet)
library(mlbench)
library(rpart)
library(rpart.plot)
library(visNetwork)
library(ISLR)
library(kernlab)
library(randomForest)
library(plotROC)
library(pROC)
library(ranger)
library(caret)
n <-50
set.seed(1234)
X <- runif(n)
set.seed(5678)
Y <- 1*X*(X<=0.6)+(-1*X+3.2)*(X>0.6)+rnorm(n,sd=0.1)
data1 <- data.frame(X,Y)
ggplot(data1)+aes(x=X,y=Y)+geom_point()+theme_classic()
rpart(Y~X,data=data1)
rpart.plot(data1)
rpart.plot(tree)
tree=rpart(Y~X,data=data1)
rpart.plot(tree)
n <- 50
set.seed(12345)
X1 <- runif(n)
set.seed(5678)
X2 <- runif(n)
Y <- rep(0,n)
set.seed(54321)
Y[X1<=0.45] <- rbinom(sum(X1<=0.45),1,0.85)
set.seed(52432)
Y[X1>0.45] <- rbinom(sum(X1>0.45),1,0.15)
#Y <- as.factor(Y)
data2 <- data.frame(X1,X2,Y)
library(ggplot2)
ggplot(data2)+aes(x=X1,y=X2,color=Y)+geom_point(size=2)+scale_x_continuous(name="")+scale_y_continuous(name="")+theme_classic()
tree <- rpart(Y~.,data=data2)
rpart.plot(tree)
data2
data2$Y=as.factor(data2$Y)
tree <- rpart(Y~.,data=data2)
rpart.plot(tree)
ggplot(data2)+aes(x=X1,y=X2,color=Y)+geom_point(size=2)+scale_x_continuous(name="")+scale_y_continuous(name="")+theme_classic()
ggplot(data2)+aes(x=X1,y=X2,color=Y,shape=Y)+geom_point(size=2)+geom_vline(xintercept = 0.44,size=1,color="blue")
ggplot(data2)+aes(x=X1,y=X2,color=Y,shape=Y)+geom_point(size=2)+geom_vline(xintercept = 0.44,size=1,color="blue")+theme_dark()
ggplot(data2)+aes(x=X1,y=X2,color=Y,shape=Y)+geom_point(size=2)+geom_vline(xintercept = 0.44,size=1,color="blue")+theme_classic()
n <- 100
X <- factor(rep(c("A","B","C","D"),n))
set.seed(1234)
Y[X=="A"] <- rbinom(sum(X=="A"),1,0.9)
Y[X=="B"] <- rbinom(sum(X=="B"),1,0.25)
Y[X=="C"] <- rbinom(sum(X=="C"),1,0.8)
Y[X=="D"] <- rbinom(sum(X=="D"),1,0.2)
Y <- as.factor(Y)
data3 <- data.frame(X,Y)
data3
tree=rpart(Y~X,data=data3)
rpart.plot(tree)
data(Carseats)
head(Carseats)
tree=rpart(Sales~.,data=Carseats)
rpart.plot(tree)
printcp(tree)
tree1=(Sales~.,data=Carseats,cp=0.00001,minsplits=2)
tree1=rpart(Sales~.,data=Carseats,cp=0.00001,minsplits=2)
tree1=rpart(Sales~.,data=Carseats,cp=0.00001,minplits=2)
tree1=rpart(Sales~.,data=Carseats,cp=0.00001,minsplit=2)
printcp(tree1)
alpha_opt <- arbre$cptable[which.min(tree1$cptable[,"xerror"]),"CP"]
tree2 <- prune(tree,cp=0.016043)
prp(tree2)
tree2 <- prune(tree1,cp=0.016043)
prp(tree2)
visTree(tree)
install.packages("sparkline")
library("sparkline")
visTree(tree)
visTreeEditor(Carseats)
#8 splits as we see above that the xerror is the minimum
#or
alpha_opt <- tree1$cptable[which.min(tree1$cptable[,"xerror"]),"CP"]
alpha_opt
alpha_opt <- tree1$cptable[which.min(tree1$cptable[,"xerror"]),"CP"]
tree2 <- prune(tree1,cp=alpha_opt)
prp(tree2)
tree2 <- prune(tree,cp=alpha_opt)
prp(tree2)
install.packages("colourpicker")
install.packages("shinyWidgets")
visTreeEditor(Carseats)
n.train <- 300
set.seed(12345)
perm <- sample(nrow(Carseats))
train <- Carseats[perm[1:n.train],]
test <- Carseats[-perm[1:n.train],]
tree <- rpart(Sales~.,data=train,cp=0.00000001,minsplit=2)
simple.tree=prune(tree,cp=0.053)
cp_opt=tree$cptable[which.min(tree1$cptable[,"xerror"]),"CP"]
#or
#cp_opt=tree1$cptable %>% as.data.frame() %>% filter(xerror==min(xerror)) %>%
opt.tree=prune(tree,cp=cp_opt)
large.tree=prune(tree,cp=0.00000008)
data.prev=data.frame(simple=predict(simple.tree,newdata=test),large=predict(large.tree,newdata=test),optimal=predict(opt.tree,newdata=test))
data.prev %>% summarise_all(funs(mean((test$Sales-.)^2)))
data(spam)
rf1 <- randomForest(type~.,data=spam)
plot(rf1)
rf2 <- randomForest(type~.,data=spam,mtry=1)
rf2
set.seed(1234)
perm <- sample(nrow(spam))
train <- spam %>% slice(perm[1:3000])
test <- spam %>% slice(-perm[1:3000])
set.seed(1234)
perm <- sample(nrow(spam))
train <- spam %>% slice(perm[1:3000])
test <- spam %>% slice(-perm[1:3000])
rf3 <- randomForest(type~.,data=train)
rf3 <- randomForest(type~.,data=train)
rf4= randomForest(type~.,data=train,mtry=1)
rf3
rf4
grille.mtry=data.frame(mtry=seq(1,30,by=5))
ctrl=trainControl(method="oob")
#library(doParallel)
#cl=mak
sel.mtry=train(type~.,data=train,method="rf",trControl=ctrl,tuneGrid=grille.mtry)
sel.mtry$bestTune
system.time(rf3=ranger(type~.,data=spam))
q()
setwd("~/Desktop/EDHEC/S1/R for data Science/Group project_Vietnam data")
vietnam<-read.csv('VietnamConflict.csv')
library(dplyr)
library(ggplot2)
library(lubridate)
library(maps)
library(mapdata)
vietnam <- vietnam %>% filter(FATALITY_YEAR <= 1975)
vietnam$BIRTH_YEAR <- strptime(vietnam$BIRTH_YEAR,"%Y%m%d")
vietnam$FATALITY_DATE <-strptime(vietnam$FATALITY_DATE, "%Y%m%d")
vietnam$FATALITY_YEAR <- year(strptime(vietnam$FATALITY_YEAR,"%Y"))
vietnam$AGE <- vietnam$FATALITY_YEAR-year(vietnam$BIRTH_YEAR)
deathperyear <- vietnam %>% select(FATALITY_YEAR) %>% group_by(FATALITY_YEAR) %>% summarize(DEATH_COUNT=n())
ggplot(deathperyear)+ aes(x=FATALITY_YEAR, y=DEATH_COUNT, group=1) + geom_line(color="steelblue") + geom_point(color="steelblue")+ggtitle("Number of death per year")+xlab("Year")+ylab("Number of Deaths")
deathpercountry<-vietnam %>% select(DEPLOYMENT_COUNTRY)%>% group_by(DEPLOYMENT_COUNTRY) %>% summarize(COUNT=n())
ggplot(deathpercountry)+aes(x=DEPLOYMENT_COUNTRY, y=COUNT) + geom_col(width=0.5, fill="steelblue")
ggplot(vietnam)+aes(y=AGE)+geom_boxplot(fill="steelblue")
statut<-vietnam %>% select(ENROLLMENT) %>% group_by(ENROLLMENT) %>% summarize(COUNT=n())
total_active<-sum(statut[1:2,2])
total_conscript<-sum(statut[,2])-total_active
statut <- data.frame(statutnames = c("Active","Selected Service"), Nb_casualties = c(total_active,total_conscript))
ggplot(statut) + aes(x=statutnames, y=Nb_casualties) + geom_bar(stat="identity", width=0.7, fill="steelblue")+xlab("Status")+ylab("Number of Deaths")
coord=read.csv("US_coord.csv",header=T,sep=";")
vietnam_join=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
coord=read.csv("US_coord.csv",header=T,sep=";")
death_state=vietnam %>% select(HOME_STATE) %>% filter(HOME_STATE) %>% summarise(COUNT=n())
vietnam
head(vietnam)
coord=read.csv("US_coord.csv",header=T,sep=";")
death_state=vietnam %>% select(HOME_STATE) %>% group_by(HOME_STATE) %>% summarise(COUNT=n())
vietnam_join=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
leaflet(vietnam_join %>% filter(HOME_STATE!="HAWAII",HOME_STATE!="ALASKA")) %>% addTiles() %>% addCircleMarkers(~LONG, ~LAT,weight=~COUNT/100,popup = ~ paste(as.character(HOME_STATE),"lost",as.character(COUNT),"soldiers"),radius=3)
library(leaflet)
coord=read.csv("US_coord.csv",header=T,sep=";")
death_state=vietnam %>% select(HOME_STATE) %>% group_by(HOME_STATE) %>% summarise(COUNT=n())
vietnam_join=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
leaflet(vietnam_join %>% filter(HOME_STATE!="HAWAII",HOME_STATE!="ALASKA")) %>% addTiles() %>% addCircleMarkers(~LONG, ~LAT,weight=~COUNT/100,popup = ~ paste(as.character(HOME_STATE),"lost",as.character(COUNT),"soldiers"),radius=3)
q()
setwd("~/Desktop/EDHEC/S1/R for data Science/Group project_Vietnam data")
vietnam<-read.csv('VietnamConflict.csv')
library(dplyr)
library(ggplot2)
library(lubridate)
library(maps)
library(mapdata)
library(leaflet)
vietnam <- vietnam %>% filter(FATALITY_YEAR <= 1975)
vietnam$BIRTH_YEAR <- strptime(vietnam$BIRTH_YEAR,"%Y%m%d")
vietnam$FATALITY_DATE <-strptime(vietnam$FATALITY_DATE, "%Y%m%d")
vietnam$FATALITY_YEAR <- year(strptime(vietnam$FATALITY_YEAR,"%Y"))
vietnam$AGE <- vietnam$FATALITY_YEAR-year(vietnam$BIRTH_YEAR)
deathperyear <- vietnam %>% select(FATALITY_YEAR) %>% group_by(FATALITY_YEAR) %>% summarize(DEATH_COUNT=n())
ggplot(deathperyear)+ aes(x=FATALITY_YEAR, y=DEATH_COUNT, group=1) + geom_line(color="steelblue") + geom_point(color="steelblue")+ggtitle("Number of death per year")+xlab("Year")+ylab("Number of Deaths")
deathpercountry<-vietnam %>% select(DEPLOYMENT_COUNTRY)%>% group_by(DEPLOYMENT_COUNTRY) %>% summarize(COUNT=n())
ggplot(deathpercountry)+aes(x=DEPLOYMENT_COUNTRY, y=COUNT) + geom_col(width=0.5, fill="steelblue")
ggplot(vietnam)+aes(y=AGE)+geom_boxplot(fill="steelblue")
statut<-vietnam %>% select(ENROLLMENT) %>% group_by(ENROLLMENT) %>% summarize(COUNT=n())
total_active<-sum(statut[1:2,2])
total_conscript<-sum(statut[,2])-total_active
statut <- data.frame(statutnames = c("Active","Selected Service"), Nb_casualties = c(total_active,total_conscript))
ggplot(statut) + aes(x=statutnames, y=Nb_casualties) + geom_bar(stat="identity", width=0.7, fill="steelblue")+xlab("Status")+ylab("Number of Deaths")
coord=read.csv("US_coord.csv",header=T,sep=";")
death_state=vietnam %>% select(HOME_STATE) %>% group_by(HOME_STATE) %>% summarise(COUNT=n())
vietnam_join=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
leaflet(vietnam_join %>% filter(HOME_STATE!="HAWAII",HOME_STATE!="ALASKA")) %>% addTiles() %>% addCircleMarkers(~LONG, ~LAT,weight=~COUNT/100,popup = ~ paste(as.character(HOME_STATE),"lost",as.character(COUNT),"soldiers"),radius=3)
q()
setwd("~/Desktop/EDHEC/S1/R for data Science/Group project_Vietnam data")
#setwd("~/Documents/Cours /Msc/S1/R for Data Sciences/Vietnam War case ")
vietnam<-read.csv('VietnamConflict.csv')
#setwd("~/Documents/Cours /Msc/S1/R for Data Sciences/Vietnam War case ")
vietnam<-read.csv('VietnamConflict.csv')
coord=read.csv("US_coord.csv",header=T,sep=";") #table with coordinates, merged for mapping reasons
library(dplyr)
library(ggplot2)
library(lubridate)
library(leaflet)
library(class)
library(rpart)
library(rpart.plot)
library(leaps)
library(pROC)
library(caret)
library(glmnet)
vietnam <- vietnam %>% filter(FATALITY_YEAR <= 1975)
vietnam$BIRTH_YEAR <- strptime(vietnam$BIRTH_YEAR,"%Y%m%d")
vietnam$FATALITY_DATE <-strptime(vietnam$FATALITY_DATE, "%Y%m%d")
vietnam$FATALITY_YEAR <- year(strptime(vietnam$FATALITY_YEAR,"%Y"))
vietnam$AGE <- vietnam$FATALITY_YEAR-year(vietnam$BIRTH_YEAR)
vietnam$DEATH_CONDITION<-as.numeric(vietnam$FATALITY=="KILLED IN ACTION")
dim(vietnam)
vietnam%>%select(FATALITY)%>%group_by(FATALITY)%>%summarize(PERCENTAGE=round(n()/nrow(vietnam)*100))
deathperyear <- vietnam %>% select(FATALITY_YEAR) %>% group_by(FATALITY_YEAR) %>% summarize(DEATH_COUNT=n())
ggplot(deathperyear)+ aes(x=FATALITY_YEAR, y=DEATH_COUNT, group=1) + geom_line(color="steelblue") + geom_point(color="steelblue")+ggtitle("Number of deaths per year")+xlab("Year")+ylab("Number of Deaths")
deathpercountry<-vietnam %>% select(DEPLOYMENT_COUNTRY)%>% group_by(DEPLOYMENT_COUNTRY) %>% summarize(COUNT=n())
ggplot(deathpercountry)+aes(x=DEPLOYMENT_COUNTRY, y=COUNT) +ggtitle("Deaths by Deployment Province") + geom_col(width=0.5, fill="steelblue")+theme(axis.text.x = element_text(size = 6) )
ggplot(vietnam)+ggtitle("Répartition de l'âge des soldats US")+aes(y=AGE)+geom_boxplot(fill="steelblue")
statut<-vietnam %>% select(ENROLLMENT) %>% group_by(ENROLLMENT) %>% summarize(COUNT=n())
total_active<-sum(statut[1:2,2])
total_conscript<-sum(statut[,2])-total_active
statut <- data.frame(statutnames = c("Active","Selected Service"), Nb_casualties = c(total_active,total_conscript))
ggplot(statut) + aes(x=statutnames, y=Nb_casualties) + geom_bar(stat="identity", width=0.7, fill="steelblue")+ggtitle("Répartition appelés VS armée de métier")+xlab("Status")+ylab("Number of Deaths")
death_state=vietnam %>% select(HOME_STATE) %>% group_by(HOME_STATE) %>% summarise(COUNT=n())
coord=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
leaflet(coord %>% filter(HOME_STATE!="HAWAII",HOME_STATE!="ALASKA")) %>% addTiles() %>% addCircleMarkers(~LONG, ~LAT,weight=~COUNT/100,popup = ~ paste(as.character(HOME_STATE),"lost",as.character(COUNT),"soldiers"),radius=3)
## Plot of proportion of casualties by ethnicity
etn=vietnam %>% select(ETHNICITY_2) %>% group_by(ETHNICITY_2) %>% summarise(PERCENTAGE = n()*100/nrow(vietnam))
ggplot(etn)+aes(x=ETHNICITY_2, y=PERCENTAGE) +ggtitle("Proportion of casualties by ethnicity") + geom_col(show.legend = TRUE,width=0.5, fill="steelblue")+coord_flip()
## Plot of proportion of casualties by military division
div <- vietnam %>% select(BRANCH) %>% group_by(BRANCH) %>% summarise(PERCENTAGE=n()*100/nrow(vietnam))
ggplot(div)+aes(x=BRANCH, y=PERCENTAGE) +ggtitle("Proportion of casualties by military division") + geom_col(show.legend = TRUE,width=0.5, fill="steelblue")+ coord_flip()
drops <- c("STATE_CODE","RELIGION_CODE","DEPLOYMENT_COUNTRY_CODE","NATIONALITY","ETHNICITY_1","DEPLOYMENT_PROVINCE","DIVISION","FATALITY","FATALITY_DATE","BIRTH_YEAR","FATALITY_2","SEX","SERVICE_TYPE","POSITION","HOME_CITY","HOME_COUNTY","RANK","HOME_STATE","RELIGION")
vietnam_log=vietnam[ , !(names(vietnam) %in% drops)]
d=ncol(vietnam_log)
set.seed(12345)
index=sample(1:nrow(vietnam_log),1000)
vietnam_log=vietnam_log[index,]
set.seed(1234)
n=nrow(vietnam_log)
perm=sample(n)
train=vietnam_log[perm[1:700],]
test=vietnam_log[perm[701:n],]
model_logistic=glm(DEATH_CONDITION~.,data=train,family = binomial)
predict_logistic=predict(model_logistic,newdata=test,type="response")
cutoff=0.5
pred_log=as.numeric(predict_logistic>cutoff)
PCC_log=mean(pred_log==test[,d]);PCC_log
vietnam_LR <- vietnam_log
for(i in 1:ncol(vietnam_LR)) {
vietnam_LR[,i]=as.factor(as.numeric(vietnam_log[,i]))
}
train_LR=vietnam_LR[perm[1:700],]
test_LR=vietnam_LR[perm[701:n],]
train_LR = data.matrix(train_LR)
train_LR[,d] = train_LR[,d]-1
test_LR = data.matrix(test_LR)
test_LR[,d] = test_LR[,d]-1
mod.L <- glmnet(train_LR[,-d], train_LR[,d], alpha = 1)
plot(mod.L)
lasso.cv <- cv.glmnet(train_LR[,-d], train_LR[,d], alpha = 1)
plot(lasso.cv)
lasso.cv$lambda.min
lasso.sel <- glmnet(train_LR[,-d], train_LR[,d], alpha = 1, lambda = lasso.cv$lambda.min)
lasso.pred = predict(lasso.sel, test_LR[,-d], s="lambda.min")
cutoff=0.5
pred_lasso=as.numeric(lasso.pred>cutoff)
PCC_lasso = mean(pred_lasso);PCC_lasso
mod.R <- glmnet(train_LR[,-d], train_LR[,d], alpha = 0)
plot(mod.R)
ridge.cv <- cv.glmnet(train_LR[,-d],train_LR[,d],lambda=exp(seq(-5,5,length=100)),alpha = 0)
plot(ridge.cv)
ridge.cv$lambda.min
ridge.sel <- glmnet(train_LR[,-d], train_LR[,d], alpha = 0, lambda = ridge.cv$lambda.min)
ridge.pred = predict(ridge.sel, test_LR[,-d], s="lambda.min")
pred_ridge=as.numeric(ridge.pred>cutoff)
PCC_ridge = mean(pred_ridge);PCC_ridge
vietnam_knn = vietnam_log
for(i in 1:ncol(vietnam_knn)) {
vietnam_knn[,i]=as.factor(as.numeric(vietnam_log[,i]))
}
train_knn=vietnam_knn[perm[1:700],]
test_knn=vietnam_knn[perm[701:n],]
error <- rep(0,50)
set.seed(123)
for (i in 1:50){
prev <- knn(train_knn,test_knn,cl=train_knn$HOSTILITY_CONDITIONS,k=i)
error[i] <- mean(prev!=test_knn$HOSTILITY_CONDITIONS)
}
kopt <- which.min(error)
kopt
df <- data.frame(k=1:50,Error=error)
ggplot(data=df)+aes(x=k,y=Error)+geom_line()+theme_classic()+ggtitle("error probability for each value of k")
predict_knn=knn(train=train_knn[,-d],test=test_knn[,-d],cl=train_knn[,d],k=kopt)
PCC_knn=mean(predict_knn==test_knn[,d]);PCC_knn
tree=rpart(DEATH_CONDITION~.,data=train,cp=0.001)
rpart.plot(tree)
alpha_opt <- tree$cptable[which.min(tree$cptable[,"xerror"]),"CP"]
tree2 <- prune(tree,cp=alpha_opt)
data.prev=data.frame(simple=predict(tree2,newdata=test),large=predict(tree,newdata=test))
PCC_trees <- data.prev %>% summarise_all(funs(mean(test$DEATH_CONDITION==.)))
PCC_tree = PCC_trees$large
PCC = data.frame(Logistic = PCC_log, LASSO = PCC_lasso, RIDGE = PCC_ridge, KNN = PCC_knn, TREE = PCC_tree);PCC
roc.log <-roc(test[,d],pred_log)
AUC_log = roc.log$auc
roc.lasso <-roc(test_LR[,d], pred_lasso)
AUC_lasso <- roc.lasso$auc
predict_knn <- as.numeric(predict_knn)
roc.knn<-roc(test_knn[,d], predict_knn)
AUC_knn = roc.knn$auc
plot(roc.log, col = "blue")
plot(roc.lasso, col="black", add=T)
plot(roc.knn, add=T, col = "red")
AUC = data.frame(Logistic = AUC_log, LASSO = AUC_lasso, KNN = AUC_knn);AUC
q()
setwd("~/Desktop/EDHEC/S1/R for data Science/Project Vietnam_casualties")
setwd("~/Documents/Cours /Msc/S1/R for Data Sciences/Vietnam War case ")
#setwd("~/Documents/Cours /Msc/S1/R for Data Sciences/Vietnam War case ")
vietnam<-read.csv('VietnamConflict.csv')
coord=read.csv("US_coord.csv",header=T,sep=";") #table with coordinates, merged for mapping reasons
library(dplyr)
library(ggplot2)
library(lubridate)
library(leaflet)
library(class)
library(rpart)
library(rpart.plot)
library(leaps)
library(pROC)
library(caret)
library(glmnet)
vietnam <- vietnam %>% filter(FATALITY_YEAR <= 1975)
vietnam$BIRTH_YEAR <- strptime(vietnam$BIRTH_YEAR,"%Y%m%d")
vietnam$FATALITY_DATE <-strptime(vietnam$FATALITY_DATE, "%Y%m%d")
vietnam$FATALITY_YEAR <- year(strptime(vietnam$FATALITY_YEAR,"%Y"))
vietnam$AGE <- vietnam$FATALITY_YEAR-year(vietnam$BIRTH_YEAR)
vietnam$DEATH_CONDITION<-as.numeric(vietnam$FATALITY=="KILLED IN ACTION")
dim(vietnam)
vietnam%>%select(FATALITY)%>%group_by(FATALITY)%>%summarize(PERCENTAGE=round(n()/nrow(vietnam)*100))
deathperyear <- vietnam %>% select(FATALITY_YEAR) %>% group_by(FATALITY_YEAR) %>% summarize(DEATH_COUNT=n())
ggplot(deathperyear)+ aes(x=FATALITY_YEAR, y=DEATH_COUNT, group=1) + geom_line(color="steelblue") + geom_point(color="steelblue")+ggtitle("Number of deaths per year")+xlab("Year")+ylab("Number of Deaths")
deathpercountry<-vietnam %>% select(DEPLOYMENT_COUNTRY)%>% group_by(DEPLOYMENT_COUNTRY) %>% summarize(COUNT=n())
ggplot(deathpercountry)+aes(x=DEPLOYMENT_COUNTRY, y=COUNT) +ggtitle("Deaths by Deployment Province") + geom_col(width=0.5, fill="steelblue")+theme(axis.text.x = element_text(size = 6) )
ggplot(vietnam)+ggtitle("Répartition de l'âge des soldats US")+aes(y=AGE)+geom_boxplot(fill="steelblue")
statut<-vietnam %>% select(ENROLLMENT) %>% group_by(ENROLLMENT) %>% summarize(COUNT=n())
total_active<-sum(statut[1:2,2])
total_conscript<-sum(statut[,2])-total_active
statut <- data.frame(statutnames = c("Active","Selected Service"), Nb_casualties = c(total_active,total_conscript))
ggplot(statut) + aes(x=statutnames, y=Nb_casualties) + geom_bar(stat="identity", width=0.7, fill="steelblue")+ggtitle("Répartition appelés VS armée de métier")+xlab("Status")+ylab("Number of Deaths")
death_state=vietnam %>% select(HOME_STATE) %>% group_by(HOME_STATE) %>% summarise(COUNT=n())
coord=left_join(death_state,coord,by=c("HOME_STATE"="STATE"))
leaflet(coord %>% filter(HOME_STATE!="HAWAII",HOME_STATE!="ALASKA")) %>% addTiles() %>% addCircleMarkers(~LONG, ~LAT,weight=~COUNT/100,popup = ~ paste(as.character(HOME_STATE),"lost",as.character(COUNT),"soldiers"),radius=3)
## Plot of proportion of casualties by ethnicity
etn=vietnam %>% select(ETHNICITY_2) %>% group_by(ETHNICITY_2) %>% summarise(PERCENTAGE = n()*100/nrow(vietnam))
ggplot(etn)+aes(x=ETHNICITY_2, y=PERCENTAGE) +ggtitle("Proportion of casualties by ethnicity") + geom_col(show.legend = TRUE,width=0.5, fill="steelblue")+coord_flip()
## Plot of proportion of casualties by military division
div <- vietnam %>% select(BRANCH) %>% group_by(BRANCH) %>% summarise(PERCENTAGE=n()*100/nrow(vietnam))
ggplot(div)+aes(x=BRANCH, y=PERCENTAGE) +ggtitle("Proportion of casualties by military division") + geom_col(show.legend = TRUE,width=0.5, fill="steelblue")+ coord_flip()
drops <- c("STATE_CODE","RELIGION_CODE","DEPLOYMENT_COUNTRY_CODE","NATIONALITY","ETHNICITY_1","DEPLOYMENT_PROVINCE","DIVISION","FATALITY","FATALITY_DATE","BIRTH_YEAR","FATALITY_2","SEX","SERVICE_TYPE","POSITION","HOME_CITY","HOME_COUNTY","RANK","HOME_STATE","RELIGION")
vietnam_log=vietnam[ , !(names(vietnam) %in% drops)]
d=ncol(vietnam_log)
set.seed(12345)
index=sample(1:nrow(vietnam_log),1000)
vietnam_log=vietnam_log[index,]
set.seed(1234)
n=nrow(vietnam_log)
perm=sample(n)
train=vietnam_log[perm[1:700],]
test=vietnam_log[perm[701:n],]
model_logistic=glm(DEATH_CONDITION~.,data=train,family = binomial)
predict_logistic=predict(model_logistic,newdata=test,type="response")
cutoff=0.5
pred_log=as.numeric(predict_logistic>cutoff)
PCC_log=mean(pred_log==test[,d]);PCC_log
vietnam_LR <- vietnam_log
for(i in 1:ncol(vietnam_LR)) {
vietnam_LR[,i]=as.factor(as.numeric(vietnam_log[,i]))
}
train_LR=vietnam_LR[perm[1:700],]
test_LR=vietnam_LR[perm[701:n],]
train_LR = data.matrix(train_LR)
train_LR[,d] = train_LR[,d]-1
test_LR = data.matrix(test_LR)
test_LR[,d] = test_LR[,d]-1
mod.L <- glmnet(train_LR[,-d], train_LR[,d], alpha = 1)
plot(mod.L)
lasso.cv <- cv.glmnet(train_LR[,-d], train_LR[,d], alpha = 1)
plot(lasso.cv)
lasso.cv$lambda.min
lasso.sel <- glmnet(train_LR[,-d], train_LR[,d], alpha = 1, lambda = lasso.cv$lambda.min)
lasso.pred = predict(lasso.sel, test_LR[,-d], s="lambda.min")
cutoff=0.5
pred_lasso=as.numeric(lasso.pred>cutoff)
PCC_lasso = mean(pred_lasso);PCC_lasso
mod.R <- glmnet(train_LR[,-d], train_LR[,d], alpha = 0)
plot(mod.R)
ridge.cv <- cv.glmnet(train_LR[,-d],train_LR[,d],lambda=exp(seq(-5,5,length=100)),alpha = 0)
plot(ridge.cv)
ridge.cv$lambda.min
ridge.sel <- glmnet(train_LR[,-d], train_LR[,d], alpha = 0, lambda = ridge.cv$lambda.min)
ridge.pred = predict(ridge.sel, test_LR[,-d], s="lambda.min")
pred_ridge=as.numeric(ridge.pred>cutoff)
PCC_ridge = mean(pred_ridge);PCC_ridge
vietnam_knn = vietnam_log
for(i in 1:ncol(vietnam_knn)) {
vietnam_knn[,i]=as.factor(as.numeric(vietnam_log[,i]))
}
train_knn=vietnam_knn[perm[1:700],]
test_knn=vietnam_knn[perm[701:n],]
error <- rep(0,50)
set.seed(123)
for (i in 1:50){
prev <- knn(train_knn,test_knn,cl=train_knn$HOSTILITY_CONDITIONS,k=i)
error[i] <- mean(prev!=test_knn$HOSTILITY_CONDITIONS)
}
kopt <- which.min(error)
kopt
df <- data.frame(k=1:50,Error=error)
ggplot(data=df)+aes(x=k,y=Error)+geom_line()+theme_classic()+ggtitle("error probability for each value of k")
predict_knn=knn(train=train_knn[,-d],test=test_knn[,-d],cl=train_knn[,d],k=kopt)
PCC_knn=mean(predict_knn==test_knn[,d]);PCC_knn
tree=rpart(DEATH_CONDITION~.,data=train,cp=0.001)
rpart.plot(tree)
alpha_opt <- tree$cptable[which.min(tree$cptable[,"xerror"]),"CP"]
tree2 <- prune(tree,cp=alpha_opt)
data.prev=data.frame(simple=predict(tree2,newdata=test),large=predict(tree,newdata=test))
PCC_trees <- data.prev %>% summarise_all(funs(mean(test$DEATH_CONDITION==.)))
PCC_tree = PCC_trees$large;PCC_tree
PCC = data.frame(Logistic = PCC_log, LASSO = PCC_lasso, RIDGE = PCC_ridge, KNN = PCC_knn, TREE = PCC_tree);PCC
roc.log <-roc(test[,d],pred_log)
AUC_log = roc.log$auc
roc.lasso <-roc(test_LR[,d], pred_lasso)
AUC_lasso <- roc.lasso$auc
predict_knn <- as.numeric(predict_knn)
roc.knn<-roc(test_knn[,d], predict_knn)
AUC_knn = roc.knn$auc
plot(roc.log, col = "blue")
plot(roc.lasso, col="black", add=T)
plot(roc.knn, add=T, col = "red")
AUC = data.frame(Logistic = AUC_log, LASSO = AUC_lasso, KNN = AUC_knn);AUC
